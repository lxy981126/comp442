FOLLOW(<statement>)= ['write', 'return', 'else', 'id', '}', ';', 'if', 'read', 'while', 'break', 'continue']
FOLLOW(<rept-opt-classDecl22>)= ['{']
FOLLOW(<rept-idnest1>)= ['.']
FOLLOW(<rept-functionCall0>)= ['id']
FOLLOW(<addOp>)= ['qm', '(', 'id', '+', 'intLit', 'stringLit', '-', 'floatLit', 'not']
FOLLOW(<visibility>)= ['id', 'func', 'string', 'integer', 'float']
FOLLOW(<rept-opt-funcBody12>)= ['}']
FOLLOW(<START>)= [$]
FOLLOW(<funcHead>)= ['{']
FOLLOW(<funcDef>)= ['main', 'func']
FOLLOW(<aParamsTail>)= [')', ',']
FOLLOW(<funcDecl>)= ['public', 'id', '}', 'func', 'private', 'string', 'integer', 'float']
FOLLOW(<varDecl>)= ['public', 'id', '}', 'func', 'string', 'private', 'integer', 'float']
FOLLOW(<fParamsTail>)= [')', ',']
FOLLOW(<memberDecl>)= ['public', 'id', '}', 'func', 'private', 'string', 'integer', 'float']
FOLLOW(<aParams>)= [')']
FOLLOW(<classDecl>)= ['main', 'func', 'class']
FOLLOW(<fParams>)= [')']
FOLLOW(<relOp>)= ['qm', '(', 'id', '+', 'intLit', 'stringLit', '-', 'floatLit', 'not']
FOLLOW(<indice>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', '[', ';', ']', '=', ')', '*', 'and', '+', ',', '-', '.', '/', 'eq', 'geq']
FOLLOW(<funcBody>)= ['main', $, 'func']
FOLLOW(<opt-funcHead1>)= ['id']
FOLLOW(<sign>)= ['qm', '(', 'id', '+', 'intLit', 'stringLit', '-', 'floatLit', 'not']
FOLLOW(<statBlock>)= ['else', ';']
FOLLOW(<assignOp>)= ['qm', '(', 'id', '+', 'intLit', 'stringLit', '-', 'floatLit', 'not']
FOLLOW(<relExpr>)= [')', ':', ';', ',', ']']
FOLLOW(<variable>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', ';', ']', '=', ')', '*', 'and', '+', ',', '-', '/', 'eq', 'geq']
FOLLOW(<factor>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', ';', ']', ')', '*', 'and', '+', ',', '-', '/', 'eq', 'geq']
FOLLOW(<prog>)= [$]
FOLLOW(<term>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', ';', ']', ')', '+', ',', '-', 'eq', 'geq']
FOLLOW(<multOp>)= ['qm', '(', 'id', '+', 'intLit', 'stringLit', '-', 'floatLit', 'not']
FOLLOW(<rightrec-term>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', ';', ']', ')', '+', ',', '-', 'eq', 'geq']
FOLLOW(<rept-varDecl2>)= [';']
FOLLOW(<opt-classDecl2>)= ['{']
FOLLOW(<rept-aParams1>)= [')']
FOLLOW(<expr>)= [')', ':', ';', ',', ']']
FOLLOW(<idnest>)= ['id']
FOLLOW(<rept-fParamsTail3>)= [')', ',']
FOLLOW(<functionCall>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', ';', ']', ')', '*', 'and', '+', ',', '-', '/', 'eq', 'geq']
FOLLOW(<rept-classDecl4>)= ['}']
FOLLOW(<type>)= ['{', 'id', ';']
FOLLOW(<arithExpr>)= ['leq', 'gt', 'neq', 'lt', ')', ':', ';', ',', ']', 'eq', 'geq']
FOLLOW(<rept-fParams2>)= [')', ',']
FOLLOW(<rightrec-arithExpr>)= ['leq', 'gt', 'neq', 'lt', ')', ':', ';', ',', ']', 'eq', 'geq']
FOLLOW(<rept-fParams3>)= [')']
FOLLOW(<arraySize>)= [')', '[', ';', ',']
FOLLOW(<assignStat>)= [';']
FOLLOW(<opt-funcBody1>)= ['write', 'return', 'id', '}', 'if', 'read', 'while', 'break', 'continue']
FOLLOW(<rept-funcBody2>)= ['}']
FOLLOW(<rept-statBlock1>)= ['}']
FOLLOW(<rept-variable0>)= ['id']
FOLLOW(<rept-prog0>)= ['main', 'func']
FOLLOW(<rept-variable2>)= ['leq', 'gt', 'neq', 'lt', 'or', ':', ';', ']', '=', ')', '*', 'and', '+', ',', '-', '/', 'eq', 'geq']
FOLLOW(<rept-prog1>)= ['main']

